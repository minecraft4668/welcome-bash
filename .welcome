#!/bin/bash

CURL_TIMEOUT=3             # curl超时时间（秒）

# 背景色

BG_BLACK="\e[40m"
BG_RED="\e[41m"
BG_GREEN="\e[42m"
BG_YELLOW="\e[43m"
BG_BLUE="\e[44m"
BG_MAGENTA="\e[45m"
BG_CYAN="\e[46m"
BG_WHITE="\e[47m"

BG_BRIGHT_BLACK="\e[100m"
BG_BRIGHT_RED="\e[101m"
BG_BRIGHT_GREEN="\e[102m"
BG_BRIGHT_YELLOW="\e[103m"
BG_BRIGHT_BLUE="\e[104m"
BG_BRIGHT_MAGENTA="\e[105m"
BG_BRIGHT_CYAN="\e[106m"
BG_BRIGHT_WHITE="\e[107m"

# 前景色（文本色）
TEXT_WHITE="\x1B[37;1m"  # 亮白色
TEXT_YELLOW="\x1B[33;1m" # 亮黄色
TEXT_GREEN="\x1B[32;1m"  # 亮绿色
TEXT_CYAN="\x1B[36;1m"   # 亮青色
TEXT_RED="\x1B[31;1m"    # 亮红色
TEXT_BLUE="\x1B[34;1m"   # 亮蓝色
TEXT_MAGENTA="\x1B[35;1m" # 亮紫色

NC="\x1B[0m"

detect_os() {
    case "$(uname -s)" in
        Linux*)
            if [ -f /etc/os-release ]; then
                . /etc/os-release
                echo "${BG_WHITE}Linux ($PRETTY_NAME)"
            elif [ -f /etc/lsb-release ]; then
                . /etc/lsb-release
                echo "${BG_WHITE}Linux ($DISTRIB_DESCRIPTION)"
            else
                echo "${BG_WHITE}Linux (Unknown distribution)"
            fi
            
            # 检测 WSL
            if uname -r | grep -q microsoft; then
                echo "${NC}  ${BG_MAGENTA}${TEXT_CYAN}Running on Windows Subsystem for Linux ↲${NC}${NC}"
            fi
            ;;
            
        Darwin*)
            echo "macOS $(sw_vers -productVersion)"
            ;;
            
        CYGWIN*|MINGW*|MSYS*)
            echo "Windows (Cygwin/MINGW)"
            is_win=1
            ;;
            
        *)
            echo "Unknown Operating System"
            ;;
    esac
}

# 显示系统信息
echo -e "${BG_BLUE}$(uname -s -r -o) ($(git --version 2>/dev/null)) running on $(detect_os)${NC}" # running on ${OS_VERSION}${NC}"
echo ""
echo -e "${TEXT_CYAN}Edited by Core.io${NC}"
echo -e "${BG_BRIGHT_GREEN} Welcome Bash v1.0${NC}"
echo ""
if [ -f /etc/hostname  ]; then
    echo -e "${BG_BLUE}$(whoami)@$(cat /etc/hostname) log in at $(date)${NC}"
else
    # 如果 /etc/hostname 不存在，使用 uname 命令获取主机名
    echo -e "${BG_BLUE}$(whoami)@$(uname -n) log in at $(date)${NC}"
fi


hitokoto=$(curl -s --connect-timeout $CURL_TIMEOUT 'https://v1.hitokoto.cn/?c=f&encode=text')
if [ -n "$hitokoto" ]; then
    echo -e "${BG_GREEN}每日一言：${hitokoto}${NC}"
else
    echo -e "${BG_RED}API调用失败，尝试使用本地库......${NC}"
    file_to_source=~/.hitokoto_lib
    if [ ! -f "$file_to_source" ]; then
        echo -e "${TEXT_RED}错误: 文件 $file_to_source 不存在${NC}" >&2
    elif source "$file_to_source" 2>/dev/null; then
        if declare -F get_random_hitokoto > /dev/null; then
            echo -e "${BG_GREEN}每日一言：$(get_random_hitokoto)${NC}"
        else
            echo -e "${TEXT_RED}错误:库文件不完整！${NC}" >&2
        fi
    else
        echo -e "${TEXT_RED}错误: 无法加载文件 $file_to_source${NC}" >&2
    fi
fi

echo ""

# 颜色测试
for i in {0..15}; do
    printf "\x1B[48;5;${i}m%4s\x1B[0m" ""
    [ $((($i + 1) % 8)) -eq 0 ] && echo
done